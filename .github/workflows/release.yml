name: Build for Windows ARM64

on:
  workflow_dispatch:

jobs:
  build-windows-arm64:
    name: Build
    runs-on: ubuntu-latest
    env:
      aria2_version: "1.36.0"
      libssh2_version: "1.10.0"
      llvm_path: "${{ github.workspace }}/llvm-mingw"
      libssh2_path: "${{ github.workspace }}/libssh2-windows-arm64"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install \
            build-essential cmake ninja-build pkg-config p7zip
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20220906/llvm-mingw-20220906-ucrt-ubuntu-18.04-x86_64.tar.xz
          tar -xf llvm-mingw-*.tar.xz
          mv llvm-mingw-20220906-ucrt-ubuntu-18.04-x86_64 llvm-mingw
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          
      - name: Install libraries from vcpkg
        run: |
          PATH=$PATH:${{ env.llvm_path }}/bin
          cd vcpkg
          # tell vcpkg to only build Release variants of the dependencies
          mkdir triplets_overlay
          cp triplets/community/arm64-mingw-static.cmake triplets_overlay/arm64-mingw-static-release.cmake
          echo "set(VCPKG_BUILD_TYPE release)" >> triplets_overlay/arm64-mingw-static-release.cmake
          # clear buildtrees after each package installation to reduce disk space requirements
          packages="zlib expat sqlite3 c-ares gmp"
          ./vcpkg upgrade \
            --overlay-triplets=triplets_overlay \
            --no-dry-run
          ./vcpkg install \
            --overlay-triplets=triplets_overlay \
            --clean-after-build \
            --triplet=arm64-mingw-static-release \
            $packages
          
      - name: Install libssh2
        run: |
          PATH=$PATH:${{ env.llvm_path }}/bin
          wget https://www.libssh2.org/download/libssh2-${{ env.libssh2_version }}.tar.gz
          tar -xf libssh2-${{ env.libssh2_version }}.tar.gz
          cd libssh2-${{ env.libssh2_version }}
          autoreconf -fi
          ./configure --disable-debug --disable-shared --enable-static \
            --prefix=${{ env.libssh2_path }} --host=aarch64-w64-mingw32 \
            --without-openssl --with-wincng
          make install

      - name: Build aria2
        run: |
          PATH=$PATH:${{ env.llvm_path }}/bin
          git clone https://github.com/agalwood/aria2
          cd aria2
          export PKG_CONFIG_PATH=${{ github.workspace }}/vcpkg/installed/arm64-mingw-static-release/lib/pkgconfig:${{ env.libssh2_path }}/lib/pkgconfig
          export ARIA2_STATIC=yes
          export CPPFLAGS="-I${{ github.workspace }}/vcpkg/installed/arm64-mingw-static-release/include"
          export LDFLAGS="-L${{ github.workspace }}/vcpkg/installed/arm64-mingw-static-release/lib"
          ./configure \
            --host=$HOST \
            --prefix=$PREFIX \
            --without-included-gettext \
            --disable-nls \
            --with-libcares \
            --without-gnutls \
            --without-wintls \
            --with-openssl \
            --with-sqlite3 \
            --without-libxml2 \
            --with-libexpat \
            --with-libz \
            --without-libgmp \
            --with-libssh2 \
            --without-libgcrypt \
            --without-libnettle \
            --with-cppunit-prefix=$PREFIX \
            ARIA2_STATIC=yes 
          make -j$(nproc)

      - name: Prepare build artifacts
        run: |
          mkdir upload
          cp ${{ github.workspace }}/aria2/src/aria2c.exe upload 
          ${{ env.llvm_path }}/bin/aarch64-w64-mingw32-strip upload/aria2c.exe
          cd upload
          7z a aria2_arm64.zip aria2c.exe
          mv aria2_arm64.zip ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aria2_arm64
          path: upload

      - name: Batch release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: aria2_arm64.zip
    
